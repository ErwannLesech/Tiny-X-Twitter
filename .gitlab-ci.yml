


variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  IMAGE_TAG: latest
  MONGO_INITDB_ROOT_USERNAME: root
  MONGO_INITDB_ROOT_PASSWORD: root
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  REDIS_HOST: redis
  REDIS_PORT: 6379
  MONGO_HOST: mongo
  MONGO_PORT: 27017
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository

stages:
  - build
  - init
  - test



test:
  image: ubuntu:latest
  stage: test
  before_script:
  # Update package lists and install prerequisites.
    - apt-get update -qq
    - apt-get install -qq -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
    # Add Dockerâ€™s official GPG key.
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    # Add the Docker repository.
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - apt-get update -qq
    # Install Docker Engine, CLI, and containerd.
    - apt-get install -qq -y docker-ce docker-ce-cli containerd.io
    # Start the Docker daemon (if not already running via the dind service).
    - service docker start
  script:
    - apt update
    - apt install openjdk-17-jdk maven -y
    - java --version
    - cd epitweet-backend/
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    reports:
      junit: epitweet-backend/target/user-service/surefire-reports/*.xml
      junit: epitweet-backend/repo-post/target/surefire-reports/*
    paths:
      - epitweet-backend/target/*.jar
    expire_in: 1 week

