### 1. Follow: user123 follows user456
POST http://localhost:8080/api/social/follow
Content-Type: application/json

{
  "followUnfollow": true,
  "userFollowedId": "user456",
  "userFollowId": "user123"
}

### 2. Follow: user123 follows user789
POST http://localhost:8080/api/social/follow
Content-Type: application/json

{
  "followUnfollow": true,
  "userFollowedId": "user789",
  "userFollowId": "user123"
}

### 3. Follow: user999 follows user123
POST http://localhost:8080/api/social/follow
Content-Type: application/json

{
  "followUnfollow": true,
  "userFollowedId": "user123",
  "userFollowId": "user999"
}

### 4. Get Follows: Retrieve users followed by user123 (should return user456 and user789)
GET http://localhost:8080/api/social/getFollows/user123
Accept: application/json

### 5. Get Followers: Retrieve users following user123 (should return user999)
GET http://localhost:8080/api/social/getFollowers/user123
Accept: application/json

### 6. Unfollow: user123 unfollows user456
POST http://localhost:8080/api/social/follow
Content-Type: application/json

{
  "followUnfollow": false,
  "userFollowedId": "user456",
  "userFollowId": "user123"
}

### 7. Get Follows: Retrieve users followed by user123 again (should return only user789)
GET http://localhost:8080/api/social/getFollows/user123
Accept: application/json

### 8. Get Follows: Test with a non-existent user (should return 404)
GET http://localhost:8080/api/social/getFollows/nonexistentuser
Accept: application/json

### 9. Get Followers: Test with a non-existent user (should return 404)
GET http://localhost:8080/api/social/getFollowers/nonexistentuser
Accept: application/json